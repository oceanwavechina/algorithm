/*
 * find_the_difference.cpp
 *
 *  Created on: May 15, 2018
 *      Author: liuyanan
 */

#include <iostream>
#include <string>
#include <map>

using namespace std;

/*
 * Given two strings s and t which  consist of only lowercase letters
 * string t generated by random shuffing strings, adn then add one more letter at a random position
 * find the letter that was added int t
 *
 * i.e.
 * 	input
 * 		s = "abcd"
 * 		t = "abcde"
 * 	output:
 * 		e
 *
 */


/* 关于 *找不同* 的又一种方法
 * 	所有关于单一值差异的比较都可以用这种方式
 *	利用两次异或可以还原初始值的办法,这样的时间复杂度是O(n), 空间复杂度是O(1)
 *
 * 其他可用的方法是
 * 	hash-map的方法，对每个字符计数，遍历两次，可以找到不同
 *
 */

char find_the_difference(string s, string t)
{
	int len = s.length();

	char ret = 0;

	for(int i=0; i< len; ++i) {
		ret ^= s[i];
		ret ^= t[i];

		cout << (int)ret << endl;
	}

	ret ^= t[len];

	return ret;
}


int main(int argc, char **argv) {

	map<string/*s*/, string/*t*/> test_cases = {{"abcd", "abcde"}, {"123x", "4123x"}};

	for(auto acase : test_cases) {

		char ret = find_the_difference(acase.first, acase.second);

		cout << "the difference of [ \"" << acase.first << "\", \"" << acase.second << "\"] is: " << ret << endl;
	}

	return 0;
}
